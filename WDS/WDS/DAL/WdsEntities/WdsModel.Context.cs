//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WDS.DAL.WdsEntities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WDSEntities : DbContext
    {
        public WDSEntities()
            : base("name=WDSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AvailabilityBroadcast> AvailabilityBroadcasts { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<BankBranch> BankBranches { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<DashboardImage> DashboardImages { get; set; }
        public virtual DbSet<DealerDistribution> DealerDistributions { get; set; }
        public virtual DbSet<DealerDistributionDetail> DealerDistributionDetails { get; set; }
        public virtual DbSet<DealerPrice> DealerPrices { get; set; }
        public virtual DbSet<DealerTerritoryMapping> DealerTerritoryMappings { get; set; }
        public virtual DbSet<DistributorOrderDetail> DistributorOrderDetails { get; set; }
        public virtual DbSet<DistributorOrderLog> DistributorOrderLogs { get; set; }
        public virtual DbSet<DistributorOrder> DistributorOrders { get; set; }
        public virtual DbSet<Distributor> Distributors { get; set; }
        public virtual DbSet<DistributorType> DistributorTypes { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<Division> Divisions { get; set; }
        public virtual DbSet<ExtendedLimit> ExtendedLimits { get; set; }
        public virtual DbSet<IncentiveDistribution> IncentiveDistributions { get; set; }
        public virtual DbSet<MainMenu> MainMenus { get; set; }
        public virtual DbSet<MarketShare> MarketShares { get; set; }
        public virtual DbSet<MisPerson> MisPersons { get; set; }
        public virtual DbSet<MisUpdateLog> MisUpdateLogs { get; set; }
        public virtual DbSet<ModelColor> ModelColors { get; set; }
        public virtual DbSet<ModelPrice> ModelPrices { get; set; }
        public virtual DbSet<OtherDistributor> OtherDistributors { get; set; }
        public virtual DbSet<OtherRetailer> OtherRetailers { get; set; }
        public virtual DbSet<Party> Parties { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductBrand> ProductBrands { get; set; }
        public virtual DbSet<ProductMaster> ProductMasters { get; set; }
        public virtual DbSet<PromotionalMessageLog> PromotionalMessageLogs { get; set; }
        public virtual DbSet<RetailerDistribution> RetailerDistributions { get; set; }
        public virtual DbSet<RetailerInfo> RetailerInfoes { get; set; }
        public virtual DbSet<RetailerOrder> RetailerOrders { get; set; }
        public virtual DbSet<RetailerOrderDetail> RetailerOrderDetails { get; set; }
        public virtual DbSet<RetailerPaymemt> RetailerPaymemts { get; set; }
        public virtual DbSet<RetailerPromotionalWinning> RetailerPromotionalWinnings { get; set; }
        public virtual DbSet<RetailerTransferLog> RetailerTransferLogs { get; set; }
        public virtual DbSet<RetailerUpdateLog> RetailerUpdateLogs { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SalesRepresentative> SalesRepresentatives { get; set; }
        public virtual DbSet<SalesTeam> SalesTeams { get; set; }
        public virtual DbSet<SendSmsLog> SendSmsLogs { get; set; }
        public virtual DbSet<SRUpdateLog> SRUpdateLogs { get; set; }
        public virtual DbSet<SubMenu> SubMenus { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Target> Targets { get; set; }
        public virtual DbSet<TaxZone> TaxZones { get; set; }
        public virtual DbSet<ThanaList> ThanaLists { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Zone> Zones { get; set; }
        public virtual DbSet<BankSolvency> BankSolvencies { get; set; }
        public virtual DbSet<BankSolvenciesUpdateLog> BankSolvenciesUpdateLogs { get; set; }
        public virtual DbSet<DistributorCheckList> DistributorCheckLists { get; set; }
        public virtual DbSet<DistributorOthersInformation> DistributorOthersInformations { get; set; }
        public virtual DbSet<DistributorOthersInformationUpdateLog> DistributorOthersInformationUpdateLogs { get; set; }
        public virtual DbSet<DistributorPersonalInformation> DistributorPersonalInformations { get; set; }
        public virtual DbSet<MemorandumOfAgreement> MemorandumOfAgreements { get; set; }
        public virtual DbSet<MemorandumOfAgreementUpdateLog> MemorandumOfAgreementUpdateLogs { get; set; }
        public virtual DbSet<MemorandumOfCheque> MemorandumOfCheques { get; set; }
        public virtual DbSet<MemorandumOfChequeUpdateLog> MemorandumOfChequeUpdateLogs { get; set; }
        public virtual DbSet<MOA_Stamps> MOA_Stamps { get; set; }
        public virtual DbSet<MOC_Cheques> MOC_Cheques { get; set; }
        public virtual DbSet<MOC_Stamps> MOC_Stamps { get; set; }
        public virtual DbSet<TaxIdentity> TaxIdentities { get; set; }
        public virtual DbSet<TradeLicens> TradeLicenses { get; set; }
        public virtual DbSet<TradeLicensesUpdateLog> TradeLicensesUpdateLogs { get; set; }
        public virtual DbSet<ValueAddedTax> ValueAddedTaxes { get; set; }
        public virtual DbSet<ValueAddedTaxesUpdateLog> ValueAddedTaxesUpdateLogs { get; set; }
        public virtual DbSet<VarificationApproval> VarificationApprovals { get; set; }
        public virtual DbSet<VarificationEntity> VarificationEntities { get; set; }
        public virtual DbSet<IncentiveDistribution_Back20210627> IncentiveDistribution_Back20210627 { get; set; }
        public virtual DbSet<SalesZone> SalesZones { get; set; }
        public virtual DbSet<TaxIdentitiesUpdateLog> TaxIdentitiesUpdateLogs { get; set; }
    
        public virtual ObjectResult<DASHBOARD_SALE_INFO_Result> DASHBOARD_SALE_INFO(string digitech_code, string import_code)
        {
            var digitech_codeParameter = digitech_code != null ?
                new ObjectParameter("digitech_code", digitech_code) :
                new ObjectParameter("digitech_code", typeof(string));
    
            var import_codeParameter = import_code != null ?
                new ObjectParameter("import_code", import_code) :
                new ObjectParameter("import_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DASHBOARD_SALE_INFO_Result>("DASHBOARD_SALE_INFO", digitech_codeParameter, import_codeParameter);
        }
    
        public virtual ObjectResult<DealerStockCheck_Result> DealerStockCheck(string dealer_code, string alternate_dealer_code, string new_ebs_dealer_code)
        {
            var dealer_codeParameter = dealer_code != null ?
                new ObjectParameter("dealer_code", dealer_code) :
                new ObjectParameter("dealer_code", typeof(string));
    
            var alternate_dealer_codeParameter = alternate_dealer_code != null ?
                new ObjectParameter("alternate_dealer_code", alternate_dealer_code) :
                new ObjectParameter("alternate_dealer_code", typeof(string));
    
            var new_ebs_dealer_codeParameter = new_ebs_dealer_code != null ?
                new ObjectParameter("new_ebs_dealer_code", new_ebs_dealer_code) :
                new ObjectParameter("new_ebs_dealer_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealerStockCheck_Result>("DealerStockCheck", dealer_codeParameter, alternate_dealer_codeParameter, new_ebs_dealer_codeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<stp_check_imei_status_Result> stp_check_imei_status(string imei)
        {
            var imeiParameter = imei != null ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_check_imei_status_Result>("stp_check_imei_status", imeiParameter);
        }
    
        public virtual ObjectResult<stp_dealer_target_achievement_report_Result> stp_dealer_target_achievement_report(string target_for, string target_type)
        {
            var target_forParameter = target_for != null ?
                new ObjectParameter("target_for", target_for) :
                new ObjectParameter("target_for", typeof(string));
    
            var target_typeParameter = target_type != null ?
                new ObjectParameter("target_type", target_type) :
                new ObjectParameter("target_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_dealer_target_achievement_report_Result>("stp_dealer_target_achievement_report", target_forParameter, target_typeParameter);
        }
    
        public virtual ObjectResult<stp_distributor_sales_and_stock_Result> stp_distributor_sales_and_stock(string start_date, string end_date, string dealer_code, string model_name, string type_name, string zone_name)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var dealer_codeParameter = dealer_code != null ?
                new ObjectParameter("dealer_code", dealer_code) :
                new ObjectParameter("dealer_code", typeof(string));
    
            var model_nameParameter = model_name != null ?
                new ObjectParameter("model_name", model_name) :
                new ObjectParameter("model_name", typeof(string));
    
            var type_nameParameter = type_name != null ?
                new ObjectParameter("type_name", type_name) :
                new ObjectParameter("type_name", typeof(string));
    
            var zone_nameParameter = zone_name != null ?
                new ObjectParameter("zone_name", zone_name) :
                new ObjectParameter("zone_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_distributor_sales_and_stock_Result>("stp_distributor_sales_and_stock", start_dateParameter, end_dateParameter, dealer_codeParameter, model_nameParameter, type_nameParameter, zone_nameParameter);
        }
    
        public virtual ObjectResult<stp_distributor_wise_sale_Result> stp_distributor_wise_sale(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_distributor_wise_sale_Result>("stp_distributor_wise_sale", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<stp_management_area_wise_market_share_Result> stp_management_area_wise_market_share(Nullable<int> monthNumber, Nullable<int> yearNumber, Nullable<long> zone_id)
        {
            var monthNumberParameter = monthNumber.HasValue ?
                new ObjectParameter("monthNumber", monthNumber) :
                new ObjectParameter("monthNumber", typeof(int));
    
            var yearNumberParameter = yearNumber.HasValue ?
                new ObjectParameter("yearNumber", yearNumber) :
                new ObjectParameter("yearNumber", typeof(int));
    
            var zone_idParameter = zone_id.HasValue ?
                new ObjectParameter("zone_id", zone_id) :
                new ObjectParameter("zone_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_management_area_wise_market_share_Result>("stp_management_area_wise_market_share", monthNumberParameter, yearNumberParameter, zone_idParameter);
        }
    
        public virtual ObjectResult<stp_management_area_wise_market_share_walton_Result> stp_management_area_wise_market_share_walton(Nullable<int> monthNumber, Nullable<int> yearNumber, Nullable<long> zone_id)
        {
            var monthNumberParameter = monthNumber.HasValue ?
                new ObjectParameter("monthNumber", monthNumber) :
                new ObjectParameter("monthNumber", typeof(int));
    
            var yearNumberParameter = yearNumber.HasValue ?
                new ObjectParameter("yearNumber", yearNumber) :
                new ObjectParameter("yearNumber", typeof(int));
    
            var zone_idParameter = zone_id.HasValue ?
                new ObjectParameter("zone_id", zone_id) :
                new ObjectParameter("zone_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_management_area_wise_market_share_walton_Result>("stp_management_area_wise_market_share_walton", monthNumberParameter, yearNumberParameter, zone_idParameter);
        }
    
        public virtual ObjectResult<stp_management_area_wise_top_brand_Result> stp_management_area_wise_top_brand(Nullable<int> month_number, Nullable<int> year_number, Nullable<long> zone_id)
        {
            var month_numberParameter = month_number.HasValue ?
                new ObjectParameter("month_number", month_number) :
                new ObjectParameter("month_number", typeof(int));
    
            var year_numberParameter = year_number.HasValue ?
                new ObjectParameter("year_number", year_number) :
                new ObjectParameter("year_number", typeof(int));
    
            var zone_idParameter = zone_id.HasValue ?
                new ObjectParameter("zone_id", zone_id) :
                new ObjectParameter("zone_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_management_area_wise_top_brand_Result>("stp_management_area_wise_top_brand", month_numberParameter, year_numberParameter, zone_idParameter);
        }
    
        public virtual ObjectResult<stp_management_retailer_count_Result> stp_management_retailer_count(Nullable<long> zone_id)
        {
            var zone_idParameter = zone_id.HasValue ?
                new ObjectParameter("zone_id", zone_id) :
                new ObjectParameter("zone_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_management_retailer_count_Result>("stp_management_retailer_count", zone_idParameter);
        }
    
        public virtual ObjectResult<stp_management_retailer_list_zone_Result> stp_management_retailer_list_zone(Nullable<long> zone_id)
        {
            var zone_idParameter = zone_id.HasValue ?
                new ObjectParameter("zone_id", zone_id) :
                new ObjectParameter("zone_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_management_retailer_list_zone_Result>("stp_management_retailer_list_zone", zone_idParameter);
        }
    
        public virtual ObjectResult<stp_market_size_Result> stp_market_size(Nullable<int> month_number, Nullable<int> year_number, Nullable<long> zone_id)
        {
            var month_numberParameter = month_number.HasValue ?
                new ObjectParameter("month_number", month_number) :
                new ObjectParameter("month_number", typeof(int));
    
            var year_numberParameter = year_number.HasValue ?
                new ObjectParameter("year_number", year_number) :
                new ObjectParameter("year_number", typeof(int));
    
            var zone_idParameter = zone_id.HasValue ?
                new ObjectParameter("zone_id", zone_id) :
                new ObjectParameter("zone_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_market_size_Result>("stp_market_size", month_numberParameter, year_numberParameter, zone_idParameter);
        }
    
        public virtual ObjectResult<stp_retailer_date_wise_incentive_Result> stp_retailer_date_wise_incentive(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<long> dist_type)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var dist_typeParameter = dist_type.HasValue ?
                new ObjectParameter("dist_type", dist_type) :
                new ObjectParameter("dist_type", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_retailer_date_wise_incentive_Result>("stp_retailer_date_wise_incentive", start_dateParameter, end_dateParameter, dist_typeParameter);
        }
    
        public virtual ObjectResult<stp_retailer_model_wise_lifiting_Result> stp_retailer_model_wise_lifiting(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_retailer_model_wise_lifiting_Result>("stp_retailer_model_wise_lifiting", start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<stp_retailer_sales_stock_Result> stp_retailer_sales_stock(string start_date, string end_date, string dealer_code, string model_name, Nullable<long> retaile_id, string zone_name, string emp_id)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var dealer_codeParameter = dealer_code != null ?
                new ObjectParameter("dealer_code", dealer_code) :
                new ObjectParameter("dealer_code", typeof(string));
    
            var model_nameParameter = model_name != null ?
                new ObjectParameter("model_name", model_name) :
                new ObjectParameter("model_name", typeof(string));
    
            var retaile_idParameter = retaile_id.HasValue ?
                new ObjectParameter("retaile_id", retaile_id) :
                new ObjectParameter("retaile_id", typeof(long));
    
            var zone_nameParameter = zone_name != null ?
                new ObjectParameter("zone_name", zone_name) :
                new ObjectParameter("zone_name", typeof(string));
    
            var emp_idParameter = emp_id != null ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_retailer_sales_stock_Result>("stp_retailer_sales_stock", start_dateParameter, end_dateParameter, dealer_codeParameter, model_nameParameter, retaile_idParameter, zone_nameParameter, emp_idParameter);
        }
    
        public virtual ObjectResult<stp_retailer_stock_Result> stp_retailer_stock(Nullable<long> retailer_id, string digitech_code, string import_code)
        {
            var retailer_idParameter = retailer_id.HasValue ?
                new ObjectParameter("retailer_id", retailer_id) :
                new ObjectParameter("retailer_id", typeof(long));
    
            var digitech_codeParameter = digitech_code != null ?
                new ObjectParameter("digitech_code", digitech_code) :
                new ObjectParameter("digitech_code", typeof(string));
    
            var import_codeParameter = import_code != null ?
                new ObjectParameter("import_code", import_code) :
                new ObjectParameter("import_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_retailer_stock_Result>("stp_retailer_stock", retailer_idParameter, digitech_codeParameter, import_codeParameter);
        }
    
        public virtual ObjectResult<stp_sr_date_wise_incentive_Result> stp_sr_date_wise_incentive(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<long> dist_type)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var dist_typeParameter = dist_type.HasValue ?
                new ObjectParameter("dist_type", dist_type) :
                new ObjectParameter("dist_type", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_sr_date_wise_incentive_Result>("stp_sr_date_wise_incentive", start_dateParameter, end_dateParameter, dist_typeParameter);
        }
    
        public virtual ObjectResult<stp_sr_report_Result> stp_sr_report(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<long> sr_id)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var sr_idParameter = sr_id.HasValue ?
                new ObjectParameter("sr_id", sr_id) :
                new ObjectParameter("sr_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_sr_report_Result>("stp_sr_report", start_dateParameter, end_dateParameter, sr_idParameter);
        }
    
        public virtual ObjectResult<stp_sr_sales_incentive_Result> stp_sr_sales_incentive(string start_date, string end_date, Nullable<long> sr_id, string model_name, string digitech_code)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var sr_idParameter = sr_id.HasValue ?
                new ObjectParameter("sr_id", sr_id) :
                new ObjectParameter("sr_id", typeof(long));
    
            var model_nameParameter = model_name != null ?
                new ObjectParameter("model_name", model_name) :
                new ObjectParameter("model_name", typeof(string));
    
            var digitech_codeParameter = digitech_code != null ?
                new ObjectParameter("digitech_code", digitech_code) :
                new ObjectParameter("digitech_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_sr_sales_incentive_Result>("stp_sr_sales_incentive", start_dateParameter, end_dateParameter, sr_idParameter, model_nameParameter, digitech_codeParameter);
        }
    
        public virtual ObjectResult<stp_sr_sales_report_Result> stp_sr_sales_report(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<long> sr_id, string digitech_code, string import_code)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var sr_idParameter = sr_id.HasValue ?
                new ObjectParameter("sr_id", sr_id) :
                new ObjectParameter("sr_id", typeof(long));
    
            var digitech_codeParameter = digitech_code != null ?
                new ObjectParameter("digitech_code", digitech_code) :
                new ObjectParameter("digitech_code", typeof(string));
    
            var import_codeParameter = import_code != null ?
                new ObjectParameter("import_code", import_code) :
                new ObjectParameter("import_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_sr_sales_report_Result>("stp_sr_sales_report", start_dateParameter, end_dateParameter, sr_idParameter, digitech_codeParameter, import_codeParameter);
        }
    
        public virtual ObjectResult<stp_sr_three_months_incentive_Result> stp_sr_three_months_incentive(string dealer_code)
        {
            var dealer_codeParameter = dealer_code != null ?
                new ObjectParameter("dealer_code", dealer_code) :
                new ObjectParameter("dealer_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_sr_three_months_incentive_Result>("stp_sr_three_months_incentive", dealer_codeParameter);
        }
    
        public virtual ObjectResult<ZoneWiseSales_Result> ZoneWiseSales(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZoneWiseSales_Result>("ZoneWiseSales", start_dateParameter, end_dateParameter);
        }
    }
}
