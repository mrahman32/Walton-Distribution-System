@model WDS.Models.RetailerInfoModel
@{
    ViewBag.Title = "EditRetailer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (TempData["message"] != null)
{
    var msgType = TempData["messageType"];
    var msg = TempData["message"];
    if ((int)msgType == 1)
    {
        TempData["message"] = null;
        TempData["messageType"] = 0;
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Message: </strong> @msg
            <a href="#" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">×</span>
            </a>
        </div>

    }
    else if ((int)msgType == 2)
    {
        TempData["message"] = null;
        TempData["messageType"] = 0;
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Message: </strong> @msg
            <a href="#" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">×</span>
            </a>
        </div>

    }
    else if ((int)msgType == 3)
    {
        TempData["message"] = null;
        TempData["messageType"] = 0;
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>Message: </strong> @msg
            <a href="#" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">×</span>
            </a>
        </div>
    }
}



<div class="container-fluid">
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-header">Edit Retailer(@Html.ActionLink("Back to Retailer List", "Retailers"))</div>
                <div class="card-body">
                    @using (Html.BeginForm("EditRetailer", "Dealer", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.IsActive)
                        @*@Html.HiddenFor(model=>model.IsActive)*@
                        @Html.HiddenFor(model => model.AddedDate)

                        <div class="row">
                            <div class="card col-lg-12">
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Distributor Name</label>
                                    <div class="col-lg-6">
                                        @Html.DropDownListFor(model => model.DistributorName, new SelectList(ViewBag.Dealers, "Value", "Text"), new { @class = "selectpicker show-tick form-control", data_live_search = "true", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.DistributorName, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Retailr Name</label>
                                    <div class="col-lg-6">
                                        @Html.TextBoxFor(model => model.RetailerName, new { @class = "form-control", @readonly = "readonly" })
                                    </div>
                                </div>
                                
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">OwnerName</label>
                                    <div class="col-lg-6">
                                        @Html.TextBoxFor(model => model.OwnerName, new { @class = "form-control", @readonly = "readonly" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Retailer Address</label>
                                    <div class="col-lg-6">
                                        @Html.TextAreaFor(model => model.RetailerAddress, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Phone Number</label>
                                    <div class="col-lg-6">
                                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Payment Type</label>
                                    <div class="col-lg-6">
                                        @Html.DropDownListFor(model => model.PaymentNumberType, new SelectList(new[]
                                {
                                    new SelectListItem{Value = "", Text = "Select", Selected = true},
                                    new SelectListItem{Value = "BKASH", Text = "BKASH"},
                                    new SelectListItem{Value = "NAGAD", Text = "NAGAD"},
                                    new SelectListItem{Value = "DBBL", Text = "DBBL Mobile Bangking"}
                                }, "Value", "Text"), new { @class = "selectpicker show-tick form-control" })
                                        @Html.ValidationMessageFor(model => model.PaymentNumberType, "", new { @class = "text-danger", @readonly = "readonly" })
                                    </div>

                                </div>
                                <div class="form-group row">

                                    <label class="col-lg-3 col-form-label text-sm-right">Payment Number</label>
                                    <div class="col-lg-6">
                                        @Html.EditorFor(model => model.PaymentNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PaymentNumber, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="form-group row">
                                    <div class="col-lg-3"></div>
                                    <div class="col-lg-6">
                                        <input type="submit" value="Submit" class="btn btn-outline-success" />
                                    </div>
                                </div>
                               
                            </div>

                            @*<div class="card col-lg-6">
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Division</label>
                                    <div class="col-lg-6">
                                        @Html.DropDownListFor(model => model.DivisionId, new SelectList(ViewBag.divisionList, "Value", "Text"), "--SELECT DIVISION--", new { @class = "selectpicker show-tick form-control", data_live_search = "true" })
                                        @Html.ValidationMessageFor(model => model.DivisionId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">District</label>
                                    <div class="col-lg-6">
                                        @Html.DropDownListFor(m => m.DistrictId, new SelectList(ViewBag.districtList, "Value", "Text"), new { @class = "selectpicker show-tick form-control DistrictId", data_live_search = "true" })
                                        @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Thana</label>
                                    <div class="col-lg-6">
                                        @Html.DropDownListFor(model => model.ThanaId, new SelectList(ViewBag.thanaList, "Value", "Text"), new { @class = "selectpicker show-tick form-control", data_live_search = "true" })
                                        @Html.ValidationMessageFor(model => model.ThanaId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Highest Selling Brand</label>
                                    <div class="col-lg-6">
                                        @Html.DropDownListFor(model => model.TopSellingBrandId, new SelectList(ViewBag.sellingBrandList, "Value", "Text"), "--SELECT BRAND--", new { @class = "selectpicker show-tick form-control", data_live_search = "true" })
                                        @Html.ValidationMessageFor(model => model.TopSellingBrandId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Monthly Total Sale</label>
                                    <div class="col-lg-6">
                                        @Html.TextBoxFor(model => model.TotalSale, new { @class = "form-control", @type = "number" })
                                        @Html.ValidationMessageFor(model => model.TotalSale, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-lg-3 col-form-label text-sm-right">Status</label>
                                    <div class="col-lg-6">
                                        @Html.DropDownListFor(model => model.Status, new SelectList(new[]
                                {
                                    new SelectListItem{Value = "", Text = "Select", Selected = true},
                                    new SelectListItem{Value = "GRT", Text = "GRT"},
                                    new SelectListItem{Value = "SIS", Text = "SIS"},
                                }, "Value", "Text"), new { @class = "selectpicker show-tick form-control" })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-lg-3"></div>
                                    <div class="col-lg-6">
                                        <input type="submit" value="Submit" class="btn btn-outline-success" />
                                    </div>
                                </div>
                            </div>*@
                            </div>
                        @*<div class="form-group row">
                    <label class="col-lg-3 col-form-label text-sm-right">Is-Active?</label>
                    <div class="col-lg-6">
                        @Html.DropDownListFor(model => model.IsActive, new SelectList(new[]
                        {
                            new SelectListItem{Value = "true", Text = "Yes"},
                            new SelectListItem{Value = "false", Text = "No"},
                        }, "Value", "Text"), new { @class = "selectpicker show-tick form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                       

                    }

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(document).ready(function () {
            $('#DivisionId').change(function () {
                $.ajax({
                    type: "post",
                    url: '@Url.Action("GetDistrictList", "Dealer")',
                    data: { divisionId: $('#DivisionId').val() },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        $("#DistrictId").empty();
                        $("#DistrictId").append('<option value="">--SELECT--</option>');
                        $.each(data, function (i, dds) {
                            $("#DistrictId").append('<option value="' + dds.Value + '">' + dds.Text + '</option>');
                        });
                        $('.selectpicker').selectpicker('refresh');
                    }
                });
            });



            $('#DistrictId').change(function () {
                $.ajax({
                    type: "post",
                    url: '@Url.Action("GetThanaListByDistrict", "Dealer")',
                    data: { districtId: $('#DistrictId').val() },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {
                        $("#ThanaId").empty();
                        $("#ThanaId").append('<option value="">--SELECT--</option>');
                        $.each(data, function (i, dds) {
                            $("#ThanaId").append('<option value="' + dds.Value + '">' + dds.Text + '</option>');
                        });
                        $('.selectpicker').selectpicker('refresh');
                    }
                });
            });
        });
    </script>
}