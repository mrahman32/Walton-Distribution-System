@model WDS.DAL.WdsEntities.User

@{
    ViewBag.Title = "CreateUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="text-center">
    @if (TempData["message"] != null)
    {
        var msgType = TempData["mType"];
        var msg = TempData["message"];
        if ((int)msgType == 1)
        {
            TempData["message"] = null;
            TempData["mType"] = 0;
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @msg
                <a href="#" class="close" data-dismiss="alert" aria-label="Close">

                </a>
            </div>

        }
        else if ((int)msgType == 2)
        {
            TempData["message"] = null;
            TempData["mType"] = 0;
            @*<div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @msg
                    <a href="#" class="close" data-dismiss="alert" aria-label="Close">

                    </a>
                </div>*@
            <span style="color: orangered; font-family: sans-serif" class="text-center">@msg</span><br />

        }
        else if ((int)msgType == 3)
        {
            TempData["message"] = null;
            TempData["mType"] = 0;
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                @msg
                <a href="#" class="close" data-dismiss="alert" aria-label="Close">
                    @*<span aria-hidden="true">×</span>*@
                </a>
            </div>
        }
    }
</div>
<br />


<div class="container-fluid">
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-header">Create User</div>
                <div class="card-body">
                    @using (Html.BeginForm("CreateUser", "Auth", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()


                        @Html.HiddenFor(model => model.AddedDate)
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Role", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.RoleId, new SelectList(ViewBag.Roles, "Value", "Text"), "Select", new { @class = "selectpicker show-tick form-control" })
                                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-outline-success" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

